/**
* Klarna Payments API V1
* API spec
*
* OpenAPI spec version: 1.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package org.oasis.klarnasdk.kotlin.model


/**
 * 
 * @param attention ‘Attn.’ (if applicable). Only applicable for B2B customers.
 * @param city Customer’s city.
 * @param country Customer’s country. This value overrides the purchase country if they are different. Should follow the standard of ISO 3166 alpha-2. E.g. GB, US, DE, SE.
 * @param email Customer’s email address.
 * @param family_name Customer’s family name.
 * @param given_name Customer’s first name.
 * @param organization_name Organization name (if applicable). Only applicable for B2B customers.
 * @param phone Phone number. Preferably a mobile phone number.
 * @param postal_code Customer’s postal code. Validation according to Universal Postal Union addressing systems. E.g. 12345, W1G OPW.
 * @param region Customer’s region or state - Mandatory for US and AU market. Validations according to ISO 3166-2 format, e.g. OH, NJ, etc.
 * @param street_address Customer’s street address. Regional formatting is required, as follows: UK/US/FR: 33 Cavendish Square Rest of EU: De Ruijterkade 7
 * @param street_address2 Customer’s street address. Second Line. 
 * @param title Customer’s Title. Allowed values per country: UK - \"Mr\", \"Ms\" DE - \"Herr\", \"Frau\" AT: \"Herr, \"Frau\" CH: de-CH: \"Herr, \"Frau\" it-CH: \"Sig.\", \"Sig.ra\" fr-CH: \"M\", \"Mme\"  BE: \"Dhr.\", \"Mevr.\" NL: \"Dhr.\", \"Mevr.\"
 */
data class Address (
    /* ‘Attn.’ (if applicable). Only applicable for B2B customers. */
    val attention: kotlin.String? = null,
    /* Customer’s city. */
    val city: kotlin.String? = null,
    /* Customer’s country. This value overrides the purchase country if they are different. Should follow the standard of ISO 3166 alpha-2. E.g. GB, US, DE, SE. */
    val country: kotlin.String? = null,
    /* Customer’s email address. */
    val email: kotlin.String? = null,
    /* Customer’s family name. */
    val family_name: kotlin.String? = null,
    /* Customer’s first name. */
    val given_name: kotlin.String? = null,
    /* Organization name (if applicable). Only applicable for B2B customers. */
    val organization_name: kotlin.String? = null,
    /* Phone number. Preferably a mobile phone number. */
    val phone: kotlin.String? = null,
    /* Customer’s postal code. Validation according to Universal Postal Union addressing systems. E.g. 12345, W1G OPW. */
    val postal_code: kotlin.String? = null,
    /* Customer’s region or state - Mandatory for US and AU market. Validations according to ISO 3166-2 format, e.g. OH, NJ, etc. */
    val region: kotlin.String? = null,
    /* Customer’s street address. Regional formatting is required, as follows: UK/US/FR: 33 Cavendish Square Rest of EU: De Ruijterkade 7 */
    val street_address: kotlin.String? = null,
    /* Customer’s street address. Second Line.  */
    val street_address2: kotlin.String? = null,
    /* Customer’s Title. Allowed values per country: UK - \"Mr\", \"Ms\" DE - \"Herr\", \"Frau\" AT: \"Herr, \"Frau\" CH: de-CH: \"Herr, \"Frau\" it-CH: \"Sig.\", \"Sig.ra\" fr-CH: \"M\", \"Mme\"  BE: \"Dhr.\", \"Mevr.\" NL: \"Dhr.\", \"Mevr.\" */
    val title: kotlin.String? = null
) {

}

