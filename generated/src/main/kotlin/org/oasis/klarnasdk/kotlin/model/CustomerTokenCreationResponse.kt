/**
* Klarna Payments API V1
* API spec
*
* OpenAPI spec version: 1.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package org.oasis.klarnasdk.kotlin.model

import org.oasis.klarnasdk.kotlin.model.Address
import org.oasis.klarnasdk.kotlin.model.Customer

/**
 * 
 * @param billing_address Provide the billing address of the customer, if you have collected already. If not, then Klarna will collect the details inside the iFrame before authorization.
 * @param customer Object to provide the details of the customer making the payment.
 * @param payment_method_reference Used to connect customers with payment method when it is present.
 * @param redirect_url URL to redirect the customer to after placing the order. This is a Klarna URL where Klarna will place a cookie in the customer’s browser (if redirected) and redirect the customer back to the confirmation URL provided by the merchant. This is not a mandatory step but a recommended one to improve the returning customer’s experience.
 * @param token_id Generated customer token. This token will be used to create a new order for the subscription using the Create a New order using token API.
 */
data class CustomerTokenCreationResponse (
    /* URL to redirect the customer to after placing the order. This is a Klarna URL where Klarna will place a cookie in the customer’s browser (if redirected) and redirect the customer back to the confirmation URL provided by the merchant. This is not a mandatory step but a recommended one to improve the returning customer’s experience. */
    val redirect_url: kotlin.String,
    /* Generated customer token. This token will be used to create a new order for the subscription using the Create a New order using token API. */
    val token_id: kotlin.String,
    /* Provide the billing address of the customer, if you have collected already. If not, then Klarna will collect the details inside the iFrame before authorization. */
    val billing_address: Address? = null,
    /* Object to provide the details of the customer making the payment. */
    val customer: Customer? = null,
    /* Used to connect customers with payment method when it is present. */
    val payment_method_reference: kotlin.String? = null
) {

}

