/**
* Klarna Payments API V1
* API spec
*
* OpenAPI spec version: 1.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package org.oasis.klarnasdk.kotlin.model


/**
 * 
 * @param confirmation URL of the merchant confirmation page. The consumer will be redirected back to the confirmation page if the consumer is sent to the redirect URL after placing the order. Insert {session.id} and/or {order.id} as placeholder to connect either of those IDs to the URL(max 2000 characters).
 * @param notification URL for notifications on pending orders. Insert {session.id} and/or {order.id} as placeholder to connect either of those IDs to the URL (max 2000 characters).
 * @param push URL that will be requested when an order is completed. Should be different than checkout and confirmation URLs. Insert {session.id} and/or {order.id} as placeholder to connect either of those IDs to the URL (max 2000 characters).
 * @param authorization URL for receiving the authorization token when payment is completed. Used for Authorization Callback.
 */
data class MerchantUrls (
    /* URL of the merchant confirmation page. The consumer will be redirected back to the confirmation page if the consumer is sent to the redirect URL after placing the order. Insert {session.id} and/or {order.id} as placeholder to connect either of those IDs to the URL(max 2000 characters). */
    val confirmation: kotlin.String? = null,
    /* URL for notifications on pending orders. Insert {session.id} and/or {order.id} as placeholder to connect either of those IDs to the URL (max 2000 characters). */
    val notification: kotlin.String? = null,
    /* URL that will be requested when an order is completed. Should be different than checkout and confirmation URLs. Insert {session.id} and/or {order.id} as placeholder to connect either of those IDs to the URL (max 2000 characters). */
    val push: kotlin.String? = null,
    /* URL for receiving the authorization token when payment is completed. Used for Authorization Callback. */
    val authorization: kotlin.String? = null
) {

}

